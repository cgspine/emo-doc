import{_ as n,o as a,c as s,a as e}from"./app-yiwPxqvI.js";const o={},t=e(`<h1 id="device" tabindex="-1"><a class="header-anchor" href="#device" aria-hidden="true">#</a> Device</h1><p><code>device</code> 提供了一些 <code>ROM</code> 或者设备相关的工具方法</p><h2 id="依赖引入" tabindex="-1"><a class="header-anchor" href="#依赖引入" aria-hidden="true">#</a> 依赖引入</h2><div class="language-kts line-numbers-mode" data-ext="kts"><pre class="language-kts"><code><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;cn.qhplus.emo:device&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="rominfo" tabindex="-1"><a class="header-anchor" href="#rominfo" aria-hidden="true">#</a> RomInfo</h2><blockquote><p>审核特色：读取 Build.Model，Build.BRAND，Build.MANUFACTURER 等都会缓存一次，以规避合规审查的次数要求。</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">getRomType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> RomType
<span class="token keyword">fun</span> <span class="token function">isXiaomi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isHuawei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isHonor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isOppo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isVivo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isMeizu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">isSamsung</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hardwareinfo" tabindex="-1"><a class="header-anchor" href="#hardwareinfo" aria-hidden="true">#</a> HardwareInfo</h2><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">getTotalMemory</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">)</span><span class="token operator">:</span> Long
<span class="token keyword">fun</span> <span class="token function">getDataStorageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Long
<span class="token keyword">fun</span> <span class="token function">hasExtraStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean
<span class="token keyword">fun</span> <span class="token function">getExtraStorageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Long
<span class="token keyword">fun</span> <span class="token function">getCpuCoreCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Int
<span class="token keyword">fun</span> <span class="token function">getBatteryCapacity</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">)</span><span class="token operator">:</span> Double
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),p=[t];function c(i,l){return a(),s("div",null,p)}const r=n(o,[["render",c],["__file","device.html.vue"]]);export{r as default};
