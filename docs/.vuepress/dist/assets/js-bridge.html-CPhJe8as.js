import{_ as s,c as a,a as e,o as p}from"./app-CTIoDS1N.js";const t={};function l(o,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="js-bridge" tabindex="-1"><a class="header-anchor" href="#js-bridge"><span>JS Bridge</span></a></h1><p><code>js bridge</code> 提供了一套 <code>Webview</code> 与 <code>native</code> 的交互方式。</p><h2 id="依赖引入" tabindex="-1"><a class="header-anchor" href="#依赖引入"><span>依赖引入</span></a></h2><div class="language-kts line-numbers-mode" data-highlighter="prismjs" data-ext="kts" data-title="kts"><pre><code><span class="line"><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;cn.qhplus.emo:js-bridge&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="native-端使用" tabindex="-1"><a class="header-anchor" href="#native-端使用"><span>native 端使用</span></a></h2><ol><li>实例化 <code>EmoJsBridgeHandler</code></li></ol><p>我们有两种方式来使用 <code>EmoJsBridgeHandler</code>。</p><p>第一种是继承自 <code>EmoJsBridgeHandler</code>, 实现其指定的方法</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token function">BusinessJsBridgeHandler</span><span class="token punctuation">(</span>scope<span class="token operator">:</span> CoroutineScope<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">EmoJsBridgeHandler</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 支持的指令集</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">getSupportedCmdList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;normal&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;timeout&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;nativeError&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 接收到 js 端的指令消息，根据指令进行不同的处理</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>cmd<span class="token operator">:</span> String<span class="token punctuation">,</span> dataPicker<span class="token operator">:</span> JsonDataPicker<span class="token punctuation">,</span> callback<span class="token operator">:</span> ResponseCallback<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;normal&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> <span class="token keyword">data</span> <span class="token operator">=</span> dataPicker<span class="token punctuation">.</span><span class="token function">pickAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span></span>
<span class="line">                <span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;id&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;收到 native 的结果， id = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">id</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;timeout&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                scope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">val</span> <span class="token keyword">data</span> <span class="token operator">=</span> dataPicker<span class="token punctuation">.</span><span class="token function">pickAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span></span>
<span class="line">                    <span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;id&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;收到 native 的结果， id = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">id</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;nativeError&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;native 告诉你失败了&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式的问题就是要写在 <code>handleMessage</code> 内写很多分支。而第二种方式则是 <code>emo</code> 用反射的方式来让代码写起来更优雅</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// 记住要 keep 住以适应 proguard.</span></span>
<span class="line"><span class="token annotation builtin">@Keep</span></span>
<span class="line"><span class="token keyword">class</span> BusinessJsReflect <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 方法名就是指令，所有方法共同构建成支持的指令集</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">normal</span><span class="token punctuation">(</span>scope<span class="token operator">:</span> CoroutineScope<span class="token punctuation">,</span> dataPicker<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>JsonDataPicker<span class="token punctuation">,</span> callback<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>ResponseCallback<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> <span class="token keyword">data</span> <span class="token operator">=</span> dataPicker<span class="token punctuation">.</span><span class="token function">pickAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span></span>
<span class="line">        <span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;id&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;收到 native 的结果， id = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">id</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">timeout</span><span class="token punctuation">(</span>scope<span class="token operator">:</span> CoroutineScope<span class="token punctuation">,</span> dataPicker<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>JsonDataPicker<span class="token punctuation">,</span> callback<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>ResponseCallback<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        scope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> <span class="token keyword">data</span> <span class="token operator">=</span> dataPicker<span class="token punctuation">.</span><span class="token function">pickAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span></span>
<span class="line">            <span class="token keyword">val</span> id <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;id&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;收到 native 的结果， id = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">id</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">nativeError</span><span class="token punctuation">(</span>scope<span class="token operator">:</span> CoroutineScope<span class="token punctuation">,</span> dataPicker<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>JsonDataPicker<span class="token punctuation">,</span> callback<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">.</span>ResponseCallback<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        callback<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;native 告诉你失败了&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 通过 EmoReflectJsBridgeHandler 实例化</span></span>
<span class="line"><span class="token keyword">val</span> bridgeHandler <span class="token operator">=</span> <span class="token function">EmoReflectJsBridgeHandler</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> <span class="token function">BusinessJsReflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>实例化 <code>EmoBridgeWebViewClient</code></li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// 第一个参数是决定是否要对 \`WebView\` 注入 js-bridge 的代码，如果不注入，则需要 H5 自身来引入。</span></span>
<span class="line"><span class="token keyword">val</span> webviewClient <span class="token operator">=</span> <span class="token function">EmoBridgeWebViewClient</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> bridgeHandler<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，由于业务需要，你可能无法使用 <code>EmoBridgeWebViewClient</code>, 那么你需要在你的 <code>WebViewClient</code> 添加下面的代码</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token function">BusinessWebViewClient</span><span class="token punctuation">(</span>handler<span class="token operator">:</span> EmoJsBridgeHandler<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">AccompanistWebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 第一个参数是决定是否要对 \`WebView\` 注入 js-bridge 的代码，如果不注入，则需要 H5 自身来引入。</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> helper <span class="token operator">=</span> <span class="token function">EmoBridgeWebViewClientHelper</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span>view<span class="token operator">:</span> WebView<span class="token operator">?</span><span class="token punctuation">,</span> request<span class="token operator">:</span> WebResourceRequest<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>view <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> helper<span class="token punctuation">.</span><span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> request<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onPageFinished</span><span class="token punctuation">(</span>view<span class="token operator">:</span> WebView<span class="token operator">?</span><span class="token punctuation">,</span> url<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPageFinished</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> url<span class="token punctuation">)</span></span>
<span class="line">        view<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">            helper<span class="token punctuation">.</span><span class="token function">doOnPageFinished</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 <code>Webview</code> 中使用</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> scope <span class="token operator">=</span> <span class="token function">rememberCoroutineScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> state <span class="token operator">=</span> <span class="token function">rememberWebViewState</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;url&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> client <span class="token operator">=</span> remember <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> bridgeHandler <span class="token operator">=</span> <span class="token function">EmoReflectJsBridgeHandler</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> <span class="token function">BusinessJsReflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">BusinessWebViewClient</span><span class="token punctuation">(</span>bridgeHandler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">WebView</span><span class="token punctuation">(</span></span>
<span class="line">    state <span class="token operator">=</span> state<span class="token punctuation">,</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    onCreated <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        it<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>javaScriptEnabled <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    client <span class="token operator">=</span> client</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="js-端使用" tabindex="-1"><a class="header-anchor" href="#js-端使用"><span>js 端使用</span></a></h2><ol><li>监听 <code>EmoBridge</code> 的绑定</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;EmoBridgeReady&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 然后就可以使用 window.EmoBridge 了</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>获取原生支持的指令列表</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">window<span class="token punctuation">.</span>EmoBridge<span class="token punctuation">.</span><span class="token function">getSupportedCmdList</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 因为 H5 不用跟版本，所以你可以做一些前置判断</span></span>
<span class="line">    <span class="token comment">// 如果你调用不支持的组件，组件内部也会直接给你抛错</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>发送指令</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">window<span class="token punctuation">.</span>EmoBridge<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">data</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">timeout</span><span class="token operator">:</span> timeout<span class="token punctuation">,</span> <span class="token comment">// 超时控制</span></span>
<span class="line">    <span class="token function-variable function">onResponse</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 获取到原生的结果</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">onFailed</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 失败了。</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>更多信息可以查看公众号文章<a href="https://mp.weixin.qq.com/s?__biz=Mzk0OTMzMjE2OQ==&amp;mid=2247483943&amp;idx=1&amp;sn=e4608d2068901328ee6f8758452ede3c&amp;chksm=c358b381f42f3a97a59d58ae29a6e90fbe8290a51ba0feb07ded4ff803153877ffa92539627f&amp;token=1864276121&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">JsBridge 的设计与实现（上）</a> 和 <a href="https://mp.weixin.qq.com/s?__biz=Mzk0OTMzMjE2OQ==&amp;mid=2247483960&amp;idx=1&amp;sn=9bb2cbf09117971c49691a6994cbda66&amp;chksm=c358b39ef42f3a88775a0c7485a13440251545b944840405056b73f111eccfe138afd8c347e4&amp;token=1864276121&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">JsBridge 的设计与实现（下）</a></p></blockquote>`,25)]))}const c=s(t,[["render",l],["__file","js-bridge.html.vue"]]),u=JSON.parse('{"path":"/guide/js-bridge.html","title":"JS Bridge","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"依赖引入","slug":"依赖引入","link":"#依赖引入","children":[]},{"level":2,"title":"native 端使用","slug":"native-端使用","link":"#native-端使用","children":[]},{"level":2,"title":"js 端使用","slug":"js-端使用","link":"#js-端使用","children":[]}],"git":{"updatedTime":1692869469000,"contributors":[{"name":"cgspine","email":"cgspine@gmail.com","commits":6}]},"filePathRelative":"guide/js-bridge.md"}');export{c as comp,u as data};
